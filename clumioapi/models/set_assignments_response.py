#
# Copyright 2023. Clumio, A Commvault Company.
#

from typing import Any, Dict, Mapping, Optional, Sequence, Type, TypeVar

from clumioapi.models import set_assignments_response_links as set_assignments_response_links_

T = TypeVar('T', bound='SetAssignmentsResponse')


class SetAssignmentsResponse:
    """Implementation of the 'SetAssignmentsResponse' model.

    Attributes:
        links:
            URLs to pages related to the resource.
        task_id:
            The Clumio-assigned ID of the task generated by this request.
    """

    # Create a mapping from Model property names to API property names
    _names: dict[str, str] = {'links': '_links', 'task_id': 'task_id'}

    def __init__(
        self, links: set_assignments_response_links_.SetAssignmentsResponseLinks, task_id: str
    ) -> None:
        """Constructor for the SetAssignmentsResponse class."""

        # Initialize members of the class
        self.links: set_assignments_response_links_.SetAssignmentsResponseLinks = links
        self.task_id: str = task_id

    @classmethod
    def from_dictionary(cls: Type[T], dictionary: Mapping[str, Any]) -> T:
        """Creates an instance of this model from a dictionary

        Args:
            dictionary: A dictionary representation of the object as obtained
                from the deserialization of the server's response. The keys
                MUST match property names in the API description.

        Returns:
            object: An instance of this structure class.
        """

        # Extract variables from the dictionary
        val = dictionary['_links']
        val_links = set_assignments_response_links_.SetAssignmentsResponseLinks.from_dictionary(val)

        val = dictionary['task_id']
        val_task_id = val

        # Return an object of this model
        return cls(
            val_links,  # type: ignore
            val_task_id,  # type: ignore
        )
